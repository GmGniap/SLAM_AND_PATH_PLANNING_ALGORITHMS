#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
\usepackage{amssymb}
\usepackage{color}
\usepackage{listings}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\lstset{
      language=Matlab,
      float=hbp,
      basicstyle=\footnotesize\ttfamily,
      identifierstyle=\color{colIdentifier},
      keywordstyle=\color{colKeys},
      stringstyle=\color{colString},
      commentstyle=\itshape\color{colComments},
      columns=fixed,
      tabsize=4,
      frame=single,
      framerule=1pt,
      extendedchars=true,
      showspaces=false,
      showstringspaces=false,
      numbers=left,
      numberstyle=\tiny\ttfamily,
      numbersep=1em,
      breaklines=true,
      breakindent=10pt,
      backgroundcolor=\color{hellgelb},
      breakautoindent=true,
      captionpos=t,
      xleftmargin=1em,
      xrightmargin=\fboxsep
}
\usepackage{lscape}
\usepackage{amsmath}
\usepackage{pifont}
\usepackage{color}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 25mm
\topmargin 25mm
\rightmargin 25mm
\bottommargin 25mm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle plain
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
chaptername}{}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
thechapter}{}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{gobble}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
L04: THE KALMAN FILTER
\end_layout

\begin_layout Section*
THE UNIVARIATE AND MULTIVARIATE GAUSSIAN PROBABILITY DENSITY FUNCTION.
\end_layout

\begin_layout Standard

\series bold
Univariate Gaussian probability density function.
\end_layout

\begin_layout Standard
The variable 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

 has dimension 1.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

p
\backslash
left(x
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
mathcal{N}
\backslash
left(
\backslash
mu, 
\backslash
sigma^2
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2
\backslash
,
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
, 
\backslash
cdot 
\backslash
, e^{
\backslash
frac{-
\backslash
left(x 
\backslash
, - 
\backslash
, 
\backslash
mu
\backslash
right)^2}{2 
\backslash
, 
\backslash
sigma^2}}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig04.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The term 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
mu$
\end_layout

\end_inset

 is called mean,.
 The mean value is the value of the random variable where the Gaussian PDF
 has its maximum value and it's also the value around which the remaining
 values of that random variable are distributed.
\end_layout

\begin_layout Standard
The quadratic form 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2$
\end_layout

\end_inset

 represents a straight segment centered at the mean that contains all the
 values of the random variable 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

 that gives a value greater or equal to 
\begin_inset ERT
status open

\begin_layout Plain Layout

$K_0$
\end_layout

\end_inset

 in the Gaussian PDF.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
frac{1}{ 
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma } 
\backslash
, 
\backslash
cdot 
\backslash
, e^{-
\backslash
frac{1}{2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2} 
\backslash
, 
\backslash
geq 
\backslash
, K_0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

e^{-
\backslash
frac{1}{2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2} 
\backslash
, &
\backslash
geq 
\backslash
, K_0 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
frac{1}{2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2 
\backslash
, &
\backslash
geq 
\backslash
, ln 
\backslash
left(K_0 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2 
\backslash
, &
\backslash
leq 
\backslash
, -2 
\backslash
, 
\backslash
cdot 
\backslash
, ln 
\backslash
left(K_0 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2 
\backslash
, &
\backslash
leq 
\backslash
, ln 
\backslash
left(K_0 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma
\backslash
right)^{-2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2 
\backslash
, &
\backslash
leq 
\backslash
, ln
\backslash
left(
\backslash
frac{1}{
\backslash
left(K_0 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma
\backslash
right)^{2}} 
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2 
\backslash
, &
\backslash
leq 
\backslash
, ln
\backslash
left(
\backslash
frac{1}{K_0^2 
\backslash
, 
\backslash
cdot 
\backslash
, 2 
\backslash
, 
\backslash
pi 
\backslash
, 
\backslash
sigma^2} 
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's call 
\begin_inset ERT
status open

\begin_layout Plain Layout

$K$
\end_layout

\end_inset

 to the term 
\begin_inset ERT
status open

\begin_layout Plain Layout

$ln
\backslash
left(
\backslash
frac{1}{K_0^2 
\backslash
, 
\backslash
cdot 
\backslash
, 2 
\backslash
, 
\backslash
pi 
\backslash
, 
\backslash
sigma^2} 
\backslash
right)$
\end_layout

\end_inset

 for simplicity.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sigma}
\backslash
right)^2 
\backslash
, &
\backslash
leq 
\backslash
, K
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(x 
\backslash
, - 
\backslash
, 
\backslash
mu 
\backslash
right)^2 
\backslash
, &
\backslash
leq 
\backslash
, K 
\backslash
, 
\backslash
sigma^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
pm 
\backslash
, 
\backslash
left(x 
\backslash
, - 
\backslash
, 
\backslash
mu 
\backslash
right) 
\backslash
, &
\backslash
leq 
\backslash
, K 
\backslash
, 
\backslash
sigma
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
mu 
\backslash
, - 
\backslash
, K 
\backslash
, 
\backslash
sigma 
\backslash
, 
\backslash
leq 
\backslash
, x  
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
mu 
\backslash
, + 
\backslash
, K 
\backslash
, 
\backslash
sigma ~ 
\backslash
longrightarrow ~ 
\backslash
text{size} 
\backslash
, = 
\backslash
, 2
\backslash
,K
\backslash
,
\backslash
sigma$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( a 
\backslash
, 
\backslash
leq 
\backslash
, x  
\backslash
, 
\backslash
leq 
\backslash
, b 
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
int_{a}^{b} 
\backslash
mathcal{N}
\backslash
left(
\backslash
mu, 
\backslash
, 
\backslash
sigma^2
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma}
\backslash
int_a^b e^{
\backslash
frac{-(x-
\backslash
mu)^2}{2
\backslash
sigma^2}} 
\backslash
, dx
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The error function is defined as:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mbox{erf}
\backslash
left(x
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
pi}}
\backslash
int_{-x}^{x} e^{-t^2} 
\backslash
, dt 
\backslash
, = 
\backslash
, 
\backslash
frac{2}{
\backslash
sqrt{
\backslash
pi}}
\backslash
int_{0}^{x} e^{-t^2} 
\backslash
, dt
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( a 
\backslash
, 
\backslash
leq 
\backslash
, x  
\backslash
, 
\backslash
leq 
\backslash
, b 
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma}
\backslash
int_a^b e^{
\backslash
frac{-(x-
\backslash
mu)^2}{2
\backslash
sigma^2}}
\backslash
 dx 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma}
\backslash
int_a^b e^{- 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)^2}
\backslash
 dx 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
left(
\backslash
int_0^b e^{- 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)^2}
\backslash
 dx 
\backslash
, - 
\backslash
, 
\backslash
int_0^a e^{- 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)^2} 
\backslash
, dx
\backslash
right) 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
, 
\backslash
int_0^b e^{- 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)^2}
\backslash
 dx 
\backslash
, - 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
, 
\backslash
int_0^a e^{- 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)^2} 
\backslash
, dx
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's change the integration variable:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

t 
\backslash
, &= 
\backslash
, 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

dt 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma} 
\backslash
, dx
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

dx 
\backslash
, &= 
\backslash
, 
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma 
\backslash
, dt
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x 
\backslash
, &= 
\backslash
,  b ~ 
\backslash
longrightarrow 
\backslash
, t 
\backslash
, = 
\backslash
, 
\backslash
left(
\backslash
frac{b 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

x 
\backslash
, &= 
\backslash
,  a ~ 
\backslash
longrightarrow 
\backslash
, t 
\backslash
, = 
\backslash
, 
\backslash
left(
\backslash
frac{a 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( a 
\backslash
, 
\backslash
leq 
\backslash
, x  
\backslash
, 
\backslash
leq 
\backslash
, b 
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma}
\backslash
int_a^b e^{
\backslash
frac{-(x-
\backslash
mu)^2}{2
\backslash
sigma^2}}
\backslash
 dx 
\backslash
, = 
\backslash
,
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
, 
\backslash
int_0^b e^{- 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)^2}
\backslash
 dx 
\backslash
, - 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
, 
\backslash
int_0^a e^{- 
\backslash
left(
\backslash
frac{x 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)^2} 
\backslash
, dx 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{
\backslash
sqrt{2}
\backslash
,
\backslash
sigma}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{b 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2}
\backslash
 dt 
\backslash
, - 
\backslash
, 
\backslash
frac{
\backslash
sqrt{2}
\backslash
,
\backslash
sigma}{
\backslash
sqrt{2 
\backslash
, 
\backslash
pi} 
\backslash
, 
\backslash
sigma} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{a 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2} 
\backslash
, dx 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
pi}} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{b 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2}
\backslash
 dt 
\backslash
, - 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
pi}} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{a 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2} 
\backslash
, dt
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
frac{1}{
\backslash
sqrt{
\backslash
pi}} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{b 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2}
\backslash
 dt 
\backslash
, &= 
\backslash
, 
\backslash
frac{2}{2} 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
pi}} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{b 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2}
\backslash
 dt 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{2}
\backslash
,
\backslash
text{erf}
\backslash
left(
\backslash
frac{b 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
frac{1}{
\backslash
sqrt{
\backslash
pi}} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{a 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2}
\backslash
 dt 
\backslash
, &= 
\backslash
, 
\backslash
frac{2}{2} 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
pi}} 
\backslash
, 
\backslash
int_0^{
\backslash
left(
\backslash
frac{a 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)} e^{- t^2}
\backslash
 dt 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{2}
\backslash
,
\backslash
text{erf}
\backslash
left(
\backslash
frac{a 
\backslash
, - 
\backslash
, 
\backslash
mu}{
\backslash
sqrt{2} 
\backslash
, 
\backslash
sigma}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( a 
\backslash
, 
\backslash
leq 
\backslash
, x  
\backslash
, 
\backslash
leq 
\backslash
, b 
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{2}
\backslash
left[
\backslash
text{erf}
\backslash
left(
\backslash
frac{b-
\backslash
mu}{
\backslash
sqrt{2}
\backslash
sigma}
\backslash
right)-
\backslash
text{erf}
\backslash
left(
\backslash
frac{a-
\backslash
mu}{
\backslash
sqrt{2}
\backslash
sigma}
\backslash
right)
\backslash
right]
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( 
\backslash
mu 
\backslash
, - 
\backslash
, K 
\backslash
, 
\backslash
sigma 
\backslash
, 
\backslash
leq 
\backslash
, x  
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
mu 
\backslash
, + 
\backslash
, K 
\backslash
, 
\backslash
sigma 
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{2}
\backslash
left[
\backslash
text{erf}
\backslash
left(
\backslash
frac{K}{
\backslash
sqrt{2}}
\backslash
right)-
\backslash
text{erf}
\backslash
left(
\backslash
frac{-K}{
\backslash
sqrt{2}}
\backslash
right)
\backslash
right]
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
text{erf}
\backslash
left(-x
\backslash
right) 
\backslash
, = 
\backslash
, -
\backslash
,
\backslash
text{erf}
\backslash
left(x
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( 
\backslash
mu 
\backslash
, - 
\backslash
, K 
\backslash
, 
\backslash
sigma 
\backslash
, 
\backslash
leq 
\backslash
, x  
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
mu 
\backslash
, + 
\backslash
, K 
\backslash
, 
\backslash
sigma 
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
text{erf}
\backslash
left(
\backslash
frac{K}{
\backslash
sqrt{2}}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

K 
\backslash
, &= 
\backslash
, 1 ~ 
\backslash
longrightarrow 
\backslash
, Pr
\backslash
left(
\backslash
mu 
\backslash
, - 
\backslash
, 1
\backslash
,
\backslash
sigma 
\backslash
, 
\backslash
leq 
\backslash
, x 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
mu 
\backslash
, + 
\backslash
, 1
\backslash
,
\backslash
sigma
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
text{erf}
\backslash
left(
\backslash
frac{1}{
\backslash
sqrt{2}}
\backslash
right) 
\backslash
, = 
\backslash
, 0.682689 ~ 
\backslash
left(68.269
\backslash
%
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

K 
\backslash
, &= 
\backslash
, 2 ~ 
\backslash
longrightarrow 
\backslash
, Pr
\backslash
left(
\backslash
mu 
\backslash
, - 
\backslash
, 2
\backslash
,
\backslash
sigma 
\backslash
, 
\backslash
leq 
\backslash
, x 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
mu 
\backslash
, + 
\backslash
, 2
\backslash
,
\backslash
sigma
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
text{erf}
\backslash
left(
\backslash
frac{2}{
\backslash
sqrt{2}}
\backslash
right) 
\backslash
, = 
\backslash
, 0.954499 ~ 
\backslash
left(95.450
\backslash
%
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

K 
\backslash
, &= 
\backslash
, 3 ~ 
\backslash
longrightarrow 
\backslash
, Pr
\backslash
left(
\backslash
mu 
\backslash
, - 
\backslash
, 3
\backslash
,
\backslash
sigma 
\backslash
, 
\backslash
leq 
\backslash
, x 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
mu 
\backslash
, + 
\backslash
, 3
\backslash
,
\backslash
sigma
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
text{erf}
\backslash
left(
\backslash
frac{3}{
\backslash
sqrt{2}}
\backslash
right) 
\backslash
, = 
\backslash
, 0.997300 ~ 
\backslash
left(99.730
\backslash
%
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig05.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Multivariate Gaussian probability density function.
\end_layout

\begin_layout Standard
The term 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{x}$
\end_layout

\end_inset

 is a real vector with N dimensions.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{x} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} x_1
\backslash

\backslash
 x_2
\backslash

\backslash
 
\backslash
vdots
\backslash

\backslash
 x_j
\backslash

\backslash
 
\backslash
vdots
\backslash

\backslash
 x_N 
\backslash
end{pmatrix} 
\backslash
, 
\backslash
in 
\backslash
, 
\backslash
mathbb{R}^{N 
\backslash
times 1}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

p
\backslash
left(
\backslash
vec{x}
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
mathcal{N}
\backslash
left(
\backslash
vec{
\backslash
mu}, 
\backslash
Sigma
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{ 
\backslash
left(2
\backslash
,
\backslash
pi 
\backslash
right)^{N/2} 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
end{vmatrix}^{1/2} } 
\backslash
, 
\backslash
cdot 
\backslash
, e^{-
\backslash
frac{1}{2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu} 
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) }
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where the normalizing constant 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
frac{1}{ 
\backslash
left(2
\backslash
,
\backslash
pi 
\backslash
right)^{N/2} 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
end{vmatrix}^{1/2} }$
\end_layout

\end_inset

 makes the volume under the multivariate Gaussian PDF equal to 1.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

0 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
mathcal{N}
\backslash
left(
\backslash
vec{
\backslash
mu}, 
\backslash
, 
\backslash
Sigma
\backslash
right) 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
infty
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

0 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
frac{1}{ 
\backslash
left(2
\backslash
,
\backslash
pi 
\backslash
right)^{N/2} 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
end{vmatrix}^{1/2} } 
\backslash
, 
\backslash
cdot 
\backslash
, e^{-
\backslash
frac{1}{2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) } 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
infty
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{
\backslash
mu}$
\end_layout

\end_inset

 is called mean.
 The mean vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{
\backslash
mu}$
\end_layout

\end_inset

 is a real vector with N dimensions.
 The mean vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{
\backslash
mu}$
\end_layout

\end_inset

 is the value of the random vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{x}$
\end_layout

\end_inset

 where the Multivariate Gaussian PDF has its maximum value and it's also
 the value around which the remaining values of that random vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{x}$
\end_layout

\end_inset

 are distributed.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{
\backslash
mu} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\backslash
mu_1
\backslash

\backslash

\backslash
mu_2
\backslash

\backslash
 
\backslash
vdots
\backslash

\backslash
 
\backslash
mu_j
\backslash

\backslash
 
\backslash
vdots
\backslash

\backslash
 
\backslash
mu_N 
\backslash
end{pmatrix} 
\backslash
in 
\backslash
, 
\backslash
mathbb{R}^{N 
\backslash
times 1}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is called covariance matrix.
 The covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is a real symmetric matrix with N dimensions.
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma 
\backslash
, 
\backslash
in 
\backslash
, 
\backslash
mathbb{R}^{N 
\backslash
times N}$
\end_layout

\end_inset

.
 Obviously, all the variances and covariances of the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 are positive:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_i^2 
\backslash
, 
\backslash
geq 
\backslash
, 0, ~ &
\backslash
forall ~ i
\backslash
, = 
\backslash
, 
\backslash
lbrace 1, 
\backslash
, 
\backslash
ldots
\backslash
, N 
\backslash
rbrace
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{ij} 
\backslash
, 
\backslash
geq 
\backslash
, 0 ~ &
\backslash
forall ~ i
\backslash
, = 
\backslash
, 
\backslash
lbrace 1, 
\backslash
, 
\backslash
ldots
\backslash
, N 
\backslash
rbrace, 
\backslash
forall ~ j
\backslash
, = 
\backslash
, 
\backslash
lbrace 1, 
\backslash
, 
\backslash
ldots
\backslash
, N 
\backslash
rbrace, 
\backslash
, i 
\backslash
, 
\backslash
neq 
\backslash
, j
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\emph on
Note that we haven't defined what are the relations among theses variances
 and covariances yet.
 We will back to this issue later when we have explained something else.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2} & 
\backslash
ldots & 
\backslash
sigma_{x_1x_j} & 
\backslash
ldots & 
\backslash
sigma_{x_1x_N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2 & 
\backslash
ldots & 
\backslash
sigma_{x_2x_j} & 
\backslash
ldots & 
\backslash
sigma_{x_2x_N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_j} & 
\backslash
sigma_{x_2x_j} & 
\backslash
ldots & 
\backslash
sigma_{x_j}^2 & 
\backslash
ldots & 
\backslash
sigma_{x_jx_N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_N} & 
\backslash
sigma_{x_2x_N} & 
\backslash
ldots & 
\backslash
sigma_{x_jx_N} & 
\backslash
ldots & 
\backslash
sigma_{x_N}^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's talk about the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
 Since the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is symmetric and real 
\series bold
the spectral descomposition theorem
\series default
 stands that:
\end_layout

\begin_layout Standard
Any real symmetric matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

, with dimensions 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

, can be written as:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, = 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D 
\backslash
, 
\backslash
cdot 
\backslash
, U^T
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where:
\end_layout

\begin_layout Itemize
The matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$D$
\end_layout

\end_inset

 is a real diagonal matrix, with dimensions 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

, where the entries of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$D$
\end_layout

\end_inset

 are the eigenvalues of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

D 
\backslash
, &= 
\backslash
, 
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 & 0 & 
\backslash
ldots & 0  & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
lambda_2 & 
\backslash
ldots & 0  & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots  & 
\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 0 & 
\backslash
ldots & 
\backslash
lambda_j  & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots  & 
\backslash
ddots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 0 & 
\backslash
ldots & 0  & 
\backslash
ldots & 
\backslash
lambda_N
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Note: The matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 has 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 eigenvalues.
 Not all the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 eigenvalues are necessarily unique.
 Some of them might be repeated.
 It's fine.
\end_layout

\begin_layout Itemize
The matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$U$
\end_layout

\end_inset

 is a real orthonormal matrix, with dimensions 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

, whose columns are the eigenvectors of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

U 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

| & | &  & | &  & |
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 & 
\backslash
vec{u}_2 & 
\backslash
ldots & 
\backslash
vec{u}_j & 
\backslash
ldots & 
\backslash
vec{u}_N
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

| & | &  & | &  & |
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

U^T 
\backslash
, &= 
\backslash
, U^{-1} ~ 
\backslash
longrightarrow ~ U^T 
\backslash
, 
\backslash
cdot 
\backslash
, U 
\backslash
, = 
\backslash
, I ~ 
\backslash
longrightarrow  ~ 
\backslash
left
\backslash
{
\backslash
begin{aligned} 
\backslash
langle 
\backslash
vec{u}_j, 
\backslash
, 
\backslash
vec{u}_k 
\backslash
rangle 
\backslash
, &= 
\backslash
, 
\backslash
vec{u}_j^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_k 
\backslash
, = 
\backslash
, 0, 
\backslash
text{ for }  j 
\backslash
, 
\backslash
neq 
\backslash
, k
\backslash

\backslash
 
\backslash
langle 
\backslash
vec{u}_j, 
\backslash
, 
\backslash
vec{u}_k 
\backslash
rangle 
\backslash
, &= 
\backslash
, 
\backslash
vec{u}_j^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_k 
\backslash
, = 
\backslash
, 1, 
\backslash
text{ for } j 
\backslash
, = 
\backslash
, k
\backslash
end{aligned}
\backslash
right.
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, &= 
\backslash
, 
\backslash
lambda_j 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j, ~ 
\backslash
forall ~ j 
\backslash
, = 
\backslash
, 
\backslash
lbrace 1, 
\backslash
, 
\backslash
ldots, 
\backslash
, N 
\backslash
rbrace
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, that it has been shown how the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$D$
\end_layout

\end_inset

 and the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$U$
\end_layout

\end_inset

 are we can also express the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 as:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, &= 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D 
\backslash
, 
\backslash
cdot 
\backslash
, U^T 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
,  
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

| & | &  & | &  & |
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 & 
\backslash
vec{u}_2 & 
\backslash
ldots & 
\backslash
vec{u}_j & 
\backslash
ldots & 
\backslash
vec{u}_N
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

| & | &  & | &  & |
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 &  &  &  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  & 
\backslash
lambda_2  &  &  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  & 
\backslash
ddots &  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  &  & 
\backslash
lambda_j  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  &  &  & 
\backslash
ddots & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  &  &  &  & 
\backslash
lambda_N
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
text{---} & 
\backslash
vec{u}_1 & 
\backslash
text{---}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
text{---} & 
\backslash
vec{u}_2 & 
\backslash
text{---}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&
\backslash
vdots&
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
text{---} & 
\backslash
vec{u}_j & 
\backslash
text{---}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&
\backslash
vdots&
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
text{---} & 
\backslash
vec{u}_N & 
\backslash
text{---}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
lambda_1 
\backslash
, 
\backslash
vec{u}_1 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_1^{
\backslash
,T} 
\backslash
, + 
\backslash
, 
\backslash
lambda_2 
\backslash
, 
\backslash
vec{u}_2 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_2^{
\backslash
,T}
\backslash
, + 
\backslash
, 
\backslash
ldots 
\backslash
, 
\backslash
lambda_j 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j^{
\backslash
,T} 
\backslash
, + 
\backslash
, 
\backslash
ldots 
\backslash
, + 
\backslash
, 
\backslash
lambda_N 
\backslash
, 
\backslash
vec{u}_N 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_N^{
\backslash
,T}
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{N} 
\backslash
lambda_j 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, 
\backslash
vec{u}_j^T
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's show the relation between the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 and its inverse 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma^{-1} 
\backslash
, = 
\backslash
, 
\backslash
left(U 
\backslash
, 
\backslash
cdot 
\backslash
, D 
\backslash
, 
\backslash
cdot 
\backslash
, U^T
\backslash
right)^{-1} 
\backslash
, = 
\backslash
, 
\backslash
left(U^T
\backslash
right)^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, U^{-1} 
\backslash
, = 
\backslash
, 
\backslash
left(U^{-1}
\backslash
right)^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, U^{T} 
\backslash
, = 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, U^{T}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore, the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

, symmetric and real, with dimensions 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

, can also be described in terms of eigenvalues and enigenvectors.
 The eigenvectors of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

 are the eigenvectors of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
 The eigenvalues of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

 are the inverse of the eigenvalues of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
 Because of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$D$
\end_layout

\end_inset

 is diagonal it's very easy to calculate it's inverse.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

D^{-1} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

1/
\backslash
lambda_1 &  &  &  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  & 1/
\backslash
lambda_2  &  &  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  & 
\backslash
ddots &  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  &  & 1/
\backslash
lambda_j  &  & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  &  &  & 
\backslash
ddots & 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  &  &  &  &  & 1/
\backslash
lambda_N
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{displaymath}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma^{-1} 
\backslash
, = 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, U^{T} 
\backslash
, = 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{N} 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, 
\backslash
vec{u}_j^T
\end_layout

\begin_layout Plain Layout


\backslash
end{displaymath}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The spectral theorem implies that there is a transformation from the real
 symmetric matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

 into a real diagonal matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$D^{-1}$
\end_layout

\end_inset

.
 Let's explain why the transformation from a real symmetric matrix into
 a real diagonal matrix is important.
\end_layout

\begin_layout Standard
Every quadratic function with 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 variables can be expressed as:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

q
\backslash
left(
\backslash
vec{y}
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
left
\backslash
langle 
\backslash
vec{y}, ~ A 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y} 
\backslash
right
\backslash
rangle 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
vec{y}^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, A 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^N
\backslash
sum_{k 
\backslash
, = 
\backslash
, 1}^{N}A_{jk} 
\backslash
, 
\backslash
cdot 
\backslash
, y_j 
\backslash
, 
\backslash
cdot 
\backslash
, y_k
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The formula for 
\begin_inset ERT
status open

\begin_layout Plain Layout

$q
\backslash
left(
\backslash
vec{y}
\backslash
right)$
\end_layout

\end_inset

 involves 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N^2$
\end_layout

\end_inset

 terms, and the variables are typically coupled.
 However if the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 happens to be a diagonal matrix, then the formula for 
\begin_inset ERT
status open

\begin_layout Plain Layout

$q
\backslash
left(
\backslash
vec{y}
\backslash
right)$
\end_layout

\end_inset

 simplifies considerably:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

q
\backslash
left(
\backslash
vec{y}
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^N A_{jj} y_j^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Such a quadratic form is easy to understand: In each coordinate direction
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y_j$
\end_layout

\end_inset

 the graph is a parabola, opening upward if 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A_{jj} 
\backslash
, > 
\backslash
, 0$
\end_layout

\end_inset

 and opening downward if 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A_{jj} 
\backslash
, < 
\backslash
, 0$
\end_layout

\end_inset

.
 There is also the degenerate case 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A_{jj} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

, in which case 
\begin_inset ERT
status open

\begin_layout Plain Layout

$q$
\end_layout

\end_inset

 is constant with respect to 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y_j$
\end_layout

\end_inset

 and the graph in that direction is a horizontal line.
\end_layout

\begin_layout Standard
The quadratic form
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right), ~ 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right
\backslash
rangle 
\backslash
, = 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset

 is the squared statistical distance from the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{
\backslash
mu}$
\end_layout

\end_inset

 to the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{x}$
\end_layout

\end_inset

.
 This squared statistical distance takes into account the variances and
 covariances among the components of the random vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{x}$
\end_layout

\end_inset

.
 The squared statistical distance 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)$
\end_layout

\end_inset

 is called the 
\series bold
squared Mahalanobis distance
\series default
.
 The Mahalanobis distance reduces to the Euclidean distance when the matrix
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is the identity matrix.
\end_layout

\begin_layout Standard
Let's do a change of variable:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{y} 
\backslash
, = 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right), ~ 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right
\backslash
rangle 
\backslash
, &= 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
vec{y}^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
vec{y}^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, U^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
left(U^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(U^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y}
\backslash
right) 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
left
\backslash
langle 
\backslash
left(U^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y}
\backslash
right), ~ D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(U^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y}
\backslash
right) 
\backslash
right
\backslash
rangle
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
alpha_{1}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
alpha_{2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
alpha_{j}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
alpha_{N}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, U^{T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y} 
\backslash
, &= 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{12} & 
\backslash
ldots & u_{1k}  & 
\backslash
ldots & u_{1N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{21} & u_{22} & 
\backslash
ldots & u_{2k}  & 
\backslash
ldots & u_{2N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots  & 
\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{j1} & u_{j2} & 
\backslash
ldots & u_{jk}  & 
\backslash
ldots & u_{jN}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots  & 
\backslash
ddots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{N1} & u_{N2} & 
\backslash
ldots & u_{Nk}  & 
\backslash
ldots & u_{NN}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

y_{1}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y_{2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y_{j}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y_{N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1^{
\backslash
,T}, ~ 
\backslash
vec{y}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_2^{
\backslash
,T}, ~ 
\backslash
vec{y}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_j^{
\backslash
,T}, ~ 
\backslash
vec{y}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_N^{
\backslash
,T}, ~ 
\backslash
vec{y}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
vec{u}_1, ~ 
\backslash
vec{y} 
\backslash
right
\backslash
rangle
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
vec{u}_2, ~ 
\backslash
vec{y} 
\backslash
right
\backslash
rangle
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
vec{u}_j, ~ 
\backslash
vec{y} 
\backslash
right
\backslash
rangle
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
vec{u}_N, ~ 
\backslash
vec{y} 
\backslash
right
\backslash
rangle
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left(U^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(U^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{y}
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
alpha_1, 
\backslash
, 
\backslash
ldots, 
\backslash
alpha_j, 
\backslash
, 
\backslash
ldots, 
\backslash
, 
\backslash
alpha_N 
\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix} 1/
\backslash
lambda_1 & & & & & 
\backslash

\backslash
 & & 
\backslash
ddots & & & 
\backslash

\backslash
 & & & 1/
\backslash
lambda_j & & 
\backslash

\backslash
 & & & & 
\backslash
ddots & 
\backslash

\backslash
 & & & & & 1/
\backslash
lambda_N
\backslash

\backslash
 
\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
alpha_{1}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
alpha_{j}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
alpha_{N}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\backslash
frac{1}{
\backslash
lambda_1} 
\backslash
, 
\backslash
alpha_1, 
\backslash
, 
\backslash
ldots, 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
alpha_j, 
\backslash
, 
\backslash
ldots, 
\backslash
, 
\backslash
frac{1}{
\backslash
lambda_N} 
\backslash
alpha_N 
\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
alpha_{1}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
alpha_{j}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
alpha_{N}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
frac{1}{
\backslash
lambda_1} 
\backslash
, 
\backslash
alpha_1^2 
\backslash
, + 
\backslash
, 
\backslash
ldots 
\backslash
, + 
\backslash
, 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
alpha_j^2 
\backslash
, + 
\backslash
, 
\backslash
ldots 
\backslash
, + 
\backslash
, 
\backslash
frac{1}{
\backslash
lambda_N} 
\backslash
alpha_N^2 
\backslash
, = 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{N} 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
alpha_j^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right), ~ 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right
\backslash
rangle 
\backslash
, = 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{N} 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
alpha_j^2 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{N} 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left
\backslash
langle 
\backslash
vec{u}_j, 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right
\backslash
rangle^2 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{N} 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left( 
\backslash
vec{u}_j^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right)^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The term 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
alpha_j 
\backslash
, = 
\backslash
, 
\backslash
left
\backslash
langle 
\backslash
vec{u}_j, 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right
\backslash
rangle 
\backslash
, = 
\backslash
, 
\backslash
vec{u}_j^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)$
\end_layout

\end_inset

 represents the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$j-th$
\end_layout

\end_inset

 coordinate of the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)$
\end_layout

\end_inset

 in the orthonormal basis 
\begin_inset ERT
status open

\begin_layout Plain Layout

$U$
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
Since every real symmetric matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 has a spectral decomposition in real eigenvalues and real eigenvectors,
 this means that every quadratic function 
\begin_inset ERT
status open

\begin_layout Plain Layout

$q
\backslash
left(
\backslash
vec{y}
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
left(
\backslash
vec{y} 
\backslash
, - 
\backslash
, 
\backslash
vec{b}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, A 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{y} 
\backslash
, - 
\backslash
, b
\backslash
right)$
\end_layout

\end_inset

 can be expressed as above
\begin_inset Newline newline
\end_inset

The set of all the values of the random vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{x}$
\end_layout

\end_inset

 that gives a constant value 
\begin_inset ERT
status open

\begin_layout Plain Layout

$K^2$
\end_layout

\end_inset

 in the quadratic function 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)$
\end_layout

\end_inset

 forms a N-dimensional curve.
 Let's call this set 
\begin_inset ERT
status open

\begin_layout Plain Layout

$S$
\end_layout

\end_inset

.
 These N-dimensional curves also give a constant value 
\begin_inset ERT
status open

\begin_layout Plain Layout

$L$
\end_layout

\end_inset

 on the Gaussian PDF, that is why these curves are called contour curves.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

q
\backslash
left(
\backslash
vec{x}
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
mu
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{N} 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left( 
\backslash
vec{u}_j^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right)^2 
\backslash
, = 
\backslash
, K^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

S 
\backslash
, &= 
\backslash
, 
\backslash
left
\backslash
lbrace 
\backslash
vec{x}_1, 
\backslash
, 
\backslash
vec{x}_2, 
\backslash
, 
\backslash
ldots  
\backslash
right
\backslash
rbrace 
\backslash
text{ forms a N-dimensional curve that solves the above constant expression}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

p
\backslash
left(
\backslash
vec{x}
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{ 
\backslash
left(2
\backslash
,
\backslash
pi 
\backslash
right)^{N/2} 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
end{vmatrix}^{1/2} } 
\backslash
, 
\backslash
cdot 
\backslash
, e^{-
\backslash
frac{1}{2} 
\backslash
, K^2 } 
\backslash
, = 
\backslash
, L
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For the Gaussian PDF to be well defined, it is necessary for all the eigenvalues
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_j$
\end_layout

\end_inset

 of the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 to be strictly positive, otherwise the Gaussian PDF cannot be properly
 normalized.
 If all of the eigenvalues 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_j$
\end_layout

\end_inset

 are strictly positive, then these N-dimensional curves have the shape of
 N-dimensional ellipsoids with their centres at the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{
\backslash
mu}$
\end_layout

\end_inset

, the direction of its 
\begin_inset ERT
status open

\begin_layout Plain Layout

$j-th$
\end_layout

\end_inset

 major axis defined by the eigenvector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_j$
\end_layout

\end_inset

 of the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 and with the length of its 
\begin_inset ERT
status open

\begin_layout Plain Layout

$j-th$
\end_layout

\end_inset

 major axis defined by 
\begin_inset ERT
status open

\begin_layout Plain Layout

$2
\backslash
,K
\backslash
,
\backslash
sqrt{
\backslash
lambda_j}$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Summarizing, the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is a real symmetric matrix, with dimensions 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

 that can be written in terms of its 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 eigenvalues and its 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 orthonormal eigenvectors using the expression 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2} & 
\backslash
ldots & 
\backslash
sigma_{x_1x_j} & 
\backslash
ldots & 
\backslash
sigma_{x_1x_N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2 & 
\backslash
ldots & 
\backslash
sigma_{x_2x_j} & 
\backslash
ldots & 
\backslash
sigma_{x_2x_N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_j} & 
\backslash
sigma_{x_2x_j} & 
\backslash
ldots & 
\backslash
sigma_{x_j}^2 & 
\backslash
ldots & 
\backslash
sigma_{x_jx_N}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_N} & 
\backslash
sigma_{x_2x_N} & 
\backslash
ldots & 
\backslash
sigma_{x_jx_N} & 
\backslash
ldots & 
\backslash
sigma_{x_N}^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D 
\backslash
, 
\backslash
cdot 
\backslash
, U^T
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
and also all its eigenvalues are strictly positive, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_j 
\backslash
, > 
\backslash
, 0, 
\backslash
, 
\backslash
forall j 
\backslash
, = 
\backslash
, 1, 
\backslash
, 
\backslash
ldots, 
\backslash
, N$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Any real symmetric matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 with all its eigenvalues strictly positive is called 
\series bold
positive definite
\series default
.
 Positive definite matrices are very important in all kind of contexts for
 its unique properties.
 In any case, I'm not going to write about this properties here because
 it's not part the topic of this document.
\end_layout

\begin_layout Standard
Therefore, the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is a positive definite matrix.
 So, imagine your are writing a real symmetric matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 and you want to know if this real symmetric matrix has all its eigenvalues
 strictly positive without having to calculate all of them.
 Well, there is a test you can do.
 The test consist on looking at the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 upper left determinants of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

, i.e, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
begin{vmatrix}A_j
\backslash
end{vmatrix}$
\end_layout

\end_inset

, where 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A_j$
\end_layout

\end_inset

 is the upper left 
\begin_inset ERT
status open

\begin_layout Plain Layout

$j 
\backslash
times j$
\end_layout

\end_inset

 submatrix.
 All the eigenvalues of our real symmetric matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 will be strictly positive if and only if 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
begin{vmatrix}A_j
\backslash
end{vmatrix} 
\backslash
, > 
\backslash
, 0, ~ 
\backslash
forall ~ 1 
\backslash
, 
\backslash
leq 
\backslash
, j 
\backslash
, 
\backslash
leq 
\backslash
, N$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Is the following matrix positive definite?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

A 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

2 & -1 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-1 & 2 & -1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & -1 & 2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

&
\backslash
begin{vmatrix} A_1 
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 2 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&
\backslash
begin{vmatrix} A_2 
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

2 & -1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-1 & 2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 2 
\backslash
, 
\backslash
cdot 
\backslash
, 2 
\backslash
, - 
\backslash
, 
\backslash
left(-1 
\backslash
, 
\backslash
cdot 
\backslash
, -1
\backslash
right) 
\backslash
, = 
\backslash
, 4 
\backslash
, - 
\backslash
, 1 
\backslash
, = 
\backslash
, 3 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&
\backslash
begin{vmatrix} A_3 
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

2 & -1 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-1 & 2 & -1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & -1 & 2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
left(2 
\backslash
, 
\backslash
cdot 
\backslash
, 2 
\backslash
, 
\backslash
cdot 
\backslash
, 2
\backslash
right) 
\backslash
, + 
\backslash
, 
\backslash
left(-1 
\backslash
, 
\backslash
cdot 
\backslash
, -1 
\backslash
, 
\backslash
cdot 
\backslash
, 0
\backslash
right) 
\backslash
, + 
\backslash
, 
\backslash
left(0 
\backslash
, 
\backslash
cdot 
\backslash
, -1 
\backslash
, 
\backslash
cdot 
\backslash
, -1
\backslash
right) 
\backslash
, -
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&-
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
left(0 
\backslash
, 
\backslash
cdot 
\backslash
, 2 
\backslash
, 
\backslash
cdot 
\backslash
, 0
\backslash
right) 
\backslash
, + 
\backslash
, 
\backslash
left(-1 
\backslash
, 
\backslash
cdot 
\backslash
, -1 
\backslash
, 
\backslash
cdot 
\backslash
, 2
\backslash
right) 
\backslash
, + 
\backslash
, 
\backslash
left(2 
\backslash
, 
\backslash
cdot 
\backslash
, -1 
\backslash
, 
\backslash
cdot 
\backslash
, -1
\backslash
right)
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 8 
\backslash
, - 
\backslash
, 
\backslash
begin{pmatrix} 2 
\backslash
, + 2 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 8 
\backslash
, - 
\backslash
, 4 
\backslash
, = 
\backslash
, 4 
\backslash
, > 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
begin{vmatrix}A_j
\backslash
end{vmatrix} 
\backslash
, > 
\backslash
, 0, ~ 
\backslash
forall ~ 1 
\backslash
, 
\backslash
leq 
\backslash
, j 
\backslash
, 
\backslash
leq 
\backslash
, 3$
\end_layout

\end_inset

, so the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 is positive definite.
\end_layout

\begin_layout Standard
So, for the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

, these constraints of having 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
begin{vmatrix}
\backslash
Sigma_j
\backslash
end{vmatrix} 
\backslash
, > 
\backslash
, 0, ~ 
\backslash
forall ~ 1 
\backslash
, 
\backslash
leq 
\backslash
, j 
\backslash
, 
\backslash
leq 
\backslash
, N$
\end_layout

\end_inset

 establish some relationships among the variances and covariances that constitut
e the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard

\series bold
Note
\series default
: the constraints and conditions that apply to the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 are the same that the ones that apply to the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

.
 Therefore, we don't have the necessity of analyzing two different sets
 of constraints and conditions.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

N 
\backslash
, = 
\backslash
, 2 ~ 
\backslash
longrightarrow ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix} 
\backslash
Sigma_{1}
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, > 
\backslash
, 0 
\backslash
, 
\backslash
longrightarrow 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_2} 
\backslash
end{vmatrix} 
\backslash
, > 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix} 
\backslash
sigma_{x_2} 
\backslash
end{vmatrix} 
\backslash
, > 
\backslash
, 0 
\backslash
, 
\backslash
longrightarrow 
\backslash
, 
\backslash
left
\backslash
{
\backslash
begin{aligned} 
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
,0 
\backslash
, 
\backslash
longrightarrow 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_2} 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
,0 ~ &
\backslash
longrightarrow ~ 
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
,0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
, < 
\backslash
,0 
\backslash
, 
\backslash
longrightarrow 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_2} 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, -
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
,0 ~ &
\backslash
longrightarrow ~ 
\backslash
sigma_{x_2} 
\backslash
, < 
\backslash
,0
\backslash
end{aligned}
\backslash
right.
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The condition 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_2} 
\backslash
, < 
\backslash
,0$
\end_layout

\end_inset

 is not valid since the standard deviation is a measure of the dispersion
 of the data, so it must be positive, not negative.
\end_layout

\begin_layout Standard
When analyzing the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
begin{vmatrix} 
\backslash
sigma_{x_2} 
\backslash
end{vmatrix}$
\end_layout

\end_inset

 I haven't taken into account the value 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_2} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

, only the value 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0$
\end_layout

\end_inset

, because, although a standard deviation can be 0, this value express that
 I am working with a deterministic value, not a random variable.
 Because of I'm working with random variables (packed in the form of a vector),
 i.e, non deterministic values, the value 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_2} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

 is not considered.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix} 
\backslash
Sigma_{2} 
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
left( 
\backslash
sigma_{x_1x_2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_1x_2}
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1x_2}^2 
\backslash
, > 
\backslash
, 0 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1x_2}^2 
\backslash
, > 
\backslash
, 0 
\backslash
, 
\backslash
longrightarrow 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_1}
\backslash
right)^2 
\backslash
, > 
\backslash
, 
\backslash
sigma_{x_1x_2}^2 
\backslash
, 
\backslash
longrightarrow  
\backslash
, 
\backslash
begin{vmatrix}
\backslash
sigma_{x_2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
end{vmatrix}  
\backslash
, > 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_1x_2} 
\backslash
end{vmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A standard deviation is a measure of the dispersion of the data, therefore,
 it must be positive:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_j 
\backslash
, > 
\backslash
, 0, ~ 
\backslash
forall ~ j 
\backslash
, = 
\backslash
, 1, 
\backslash
, 
\backslash
ldots, 
\backslash
, N
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

(
\backslash
text{for random variables we only use the symbol >})
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

(
\backslash
text{ equal symbol is supressed, due to the above condition})
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0 ~ &
\backslash
longrightarrow ~ 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
,  
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix}
\backslash
sigma_{x_2} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
end{vmatrix}  
\backslash
, > 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_1x_2} 
\backslash
end{vmatrix} ~ &
\backslash
longrightarrow ~ 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_1x_2} 
\backslash
end{vmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix} 
\backslash
sigma_{x_1x_2} 
\backslash
end{vmatrix} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, 
\backslash
longrightarrow 
\backslash
, 
\backslash
left
\backslash
{
\backslash
begin{aligned} 
\backslash
sigma_{x_1x_2} 
\backslash
, > 
\backslash
,0, 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_1x_2} 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, 
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, ~~~
\backslash
longrightarrow 
\backslash
, 
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
,0, 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
sigma_{x_1x_2} 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, -
\backslash
,
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, 
\backslash
longrightarrow 
\backslash
, 
\backslash
sigma_{x_1x_2} 
\backslash
, > 
\backslash
,-
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
end{aligned}
\backslash
right.
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally, the conditions for the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 (and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

) to be positive definite are:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

(
\backslash
text{Note the lack of the equal symbol})
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Reorganizing a bit the terms of the last condition I get:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout

-
\backslash
,1 
\backslash
, < 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_1x_2}}{
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}} 
\backslash
, < 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

(
\backslash
text{Note the lack of the equal symbol})
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The correlation coefficient is defined as:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
rho 
\backslash
, = 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_1x_2}}{
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,1 
\backslash
, 
\backslash
leq 
\backslash
, 
\backslash
rho 
\backslash
, 
\backslash
leq 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

(
\backslash
text{Note the presence of the equal symbol})
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Basically our conditions stands that I must have strictly positive standard
 deviations and a correlation coefficient between 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(-
\backslash
,1, 
\backslash
, 1)$
\end_layout

\end_inset

 (open range, therefore the extremes are excluded):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,1 
\backslash
, < 
\backslash
, 
\backslash
rho 
\backslash
, < 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} -
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
text{Note the lack of the equal symbol}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's study the bivariate Gaussian PDF.
 The covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is a positive definite matrix with dimension 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

.
 This means that the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 is a real symmetric matrix, with dimension 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

, with 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 real eigenvalues that are strictly positive, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_j 
\backslash
, > 
\backslash
, 0 ~ 
\backslash
forall ~ j 
\backslash
, = 
\backslash
, 1, 
\backslash
, 
\backslash
ldots, 
\backslash
, N$
\end_layout

\end_inset

, due to the constraints:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,1 
\backslash
, < 
\backslash
, 
\backslash
rho 
\backslash
, < 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} -
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
text{Note the lack of the equal symbol}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
and with 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 orthonormal eigenvectors, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$U^T 
\backslash
, = 
\backslash
, U^{-1} ~ 
\backslash
longrightarrow ~ U^{T} 
\backslash
, 
\backslash
cdot 
\backslash
, U 
\backslash
, = 
\backslash
, I$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, = 
\backslash
, 
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D 
\backslash
, 
\backslash
cdot 
\backslash
, U^T 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{21}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{12} & u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 &  0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0  & 
\backslash
lambda_2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{12}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{21} & u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{2}
\backslash
lambda_j 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, 
\backslash
vec{u}_j^{
\backslash
,T}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Besides, the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

 is also a positive definite matrix with dimension 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

.
 As before, this means that the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma^{-1}$
\end_layout

\end_inset

 is a real symmetric matrix, with dimension 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N 
\backslash
times N$
\end_layout

\end_inset

, with 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 real eigenvalues that are strictly positive, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$1/
\backslash
lambda_j 
\backslash
, > 
\backslash
, 0 ~ 
\backslash
forall ~ j 
\backslash
, = 
\backslash
, 1, 
\backslash
, 
\backslash
ldots, 
\backslash
, N$
\end_layout

\end_inset

, due to the constraints:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,1 
\backslash
, < 
\backslash
, 
\backslash
rho 
\backslash
, < 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} -
\backslash
,
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
sigma_{x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
text{Note the lack of the equal symbol}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
and with 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 orthonormal eigenvectors, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$U^T 
\backslash
, = 
\backslash
, U^{-1} ~ 
\backslash
longrightarrow ~ U^{T} 
\backslash
, 
\backslash
cdot 
\backslash
, U 
\backslash
, = 
\backslash
, I$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma^{-1} 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
end{vmatrix}} 
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2}^2 & -
\backslash
,
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,
\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_1}^2 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1x_2}^2}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2}^2 & -
\backslash
,
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,
\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_1}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, U 
\backslash
, 
\backslash
cdot 
\backslash
, D^{-1}
\backslash
, 
\backslash
cdot 
\backslash
, U^T 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{21}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{12} & u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

1/
\backslash
lambda_1 &  0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0  & 1/
\backslash
lambda_2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{12}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{21} & u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&=
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{2}
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, 
\backslash
vec{u}_j^{
\backslash
,T}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The quadratic function
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
, = 
\backslash
, K^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
represents a 2D ellipse with its center located at the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{
\backslash
mu}$
\end_layout

\end_inset

, the directions of its principal axes defined by the orthonormal eigenvectors
 of the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_1$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_2$
\end_layout

\end_inset

, and with the length of its principal axes defined by 
\begin_inset ERT
status open

\begin_layout Plain Layout

$2
\backslash
,K 
\backslash
, 
\backslash
sqrt{
\backslash
lambda_j}$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig07.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The quadratic function 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)$
\end_layout

\end_inset

 can be express in two ways:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
end{vmatrix}} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1, x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2 
\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2}^2 & -
\backslash
,
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,
\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_1}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash

\backslash
 x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2 
\backslash
end{pmatrix} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{1}{
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
end{vmatrix}} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash
right)^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
left(x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2
\backslash
right)^2 
\backslash
, - 
\backslash
, 2
\backslash
,
\backslash
sigma_{x_1x_2} 
\backslash
, 
\backslash
left(x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash
right) 
\backslash
, 
\backslash
left(x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2
\backslash
right)
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
, &= 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^{2} 
\backslash
frac{1}{
\backslash
lambda_j} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left( 
\backslash
vec{u}_j^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right)^2 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
left(
\backslash
frac{u_{11}^2}{
\backslash
lambda_1} + 
\backslash
frac{u_{21}^2}{
\backslash
lambda_2}
\backslash
right)
\backslash
,
\backslash
cdot
\backslash
,
\backslash
left(x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash
right)^2 
\backslash
, + 
\backslash
, 
\backslash
left(
\backslash
frac{u_{12}^2}{
\backslash
lambda_1} + 
\backslash
frac{u_{22}^2}{
\backslash
lambda_2}
\backslash
right)
\backslash
,
\backslash
cdot
\backslash
,
\backslash
left(x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2
\backslash
right)^2 
\backslash
, +
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&
\backslash
, + 
\backslash
, 2
\backslash
,
\backslash
cdot
\backslash
,
\backslash
left(
\backslash
frac{u_{11}
\backslash
,
\backslash
cdot
\backslash
,u_{12}}{
\backslash
lambda_1} + 
\backslash
frac{u_{21}
\backslash
,
\backslash
cdot
\backslash
,u_{22}}{
\backslash
lambda_2}
\backslash
right)
\backslash
,
\backslash
cdot
\backslash
,
\backslash
left(x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash
right)
\backslash
,
\backslash
cdot
\backslash
,
\backslash
left(x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( 
\backslash
vec{x} 
\backslash
in 
\backslash
text{ ellipse of } K 
\backslash
, = 
\backslash
, 1
\backslash
right) 
\backslash
, = 
\backslash
, 0.682689 ~ 
\backslash
left(68.269
\backslash
%
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( 
\backslash
vec{x} 
\backslash
in 
\backslash
text{ ellipse of } K 
\backslash
, = 
\backslash
, 2
\backslash
right) 
\backslash
, = 
\backslash
, 0.954499 ~ 
\backslash
left(95.450
\backslash
%
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Pr
\backslash
left( 
\backslash
vec{x} 
\backslash
in 
\backslash
text{ ellipse of } K 
\backslash
, = 
\backslash
, 3
\backslash
right) 
\backslash
, = 
\backslash
, 0.997300 ~ 
\backslash
left(99.730
\backslash
%
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's describe how to calculate the eigenvalues and the eigenvectors of
 the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
If the following expression can be written:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, = 
\backslash
, 
\backslash
lambda_j 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
then value 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_j$
\end_layout

\end_inset

 is an eigenvalue of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 and the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_j$
\end_layout

\end_inset

 is an eigenvector of the matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 that are associated.
\end_layout

\begin_layout Standard
Therefore, if the above equation is satisfied, then the equation can be
 written as:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, = 
\backslash
, 
\backslash
left(
\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
, I 
\backslash
right) 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The equation 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(
\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
, I 
\backslash
right) 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

 has a non-zero solution, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_j 
\backslash
, 
\backslash
neq 
\backslash
, 0$
\end_layout

\end_inset

, if and only if 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
begin{vmatrix}
\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
, I
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

.
 Therefore, the eigenvalues of the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 are the roots of the equation 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
begin{vmatrix} 
\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
, I
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

.
 The values 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_j$
\end_layout

\end_inset

 obtained are introduced in the expression 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
left(
\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
, I 
\backslash
right) 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_j 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

 to calculate the eigenvectors 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_j$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
We are going to use the relation:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
rho = 
\backslash
frac{
\backslash
sigma_{x_1x_2}}{
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
sigma_{x_2}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-1 
\backslash
, < 
\backslash
, 
\backslash
rho 
\backslash
, < 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\backslash
text{Note the lack of the equal symbol due to our conditions for the matrices
 } 
\backslash
Sigma 
\backslash
text{ and } 
\backslash
Sigma^{-1} 
\backslash
text{ to be posititive definite}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix}
\end_layout

\begin_layout Plain Layout

 
\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
, I
\end_layout

\begin_layout Plain Layout


\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, - 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
lambda_j & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
lambda_j
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{vmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{vmatrix} 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\backslash
right) 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\backslash
right) 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1x_2}^2 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\backslash
right) 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\backslash
right) 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
sigma_{x_1}^2
\backslash
sigma_{x_2}^2 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
lambda_j^2 
\backslash
, - 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right) 
\backslash
, 
\backslash
lambda_j 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right) 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, + 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lambda_2 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, I calculate the eigenvectors 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_j$
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
lambda_1 
\backslash
, 
\backslash
vec{u}_1
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

&
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix} u_{11}
\backslash

\backslash
 u_{12} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
lambda_1 
\backslash
, 
\backslash
begin{pmatrix}u_{11}
\backslash

\backslash
u_{12} 
\backslash
end{pmatrix}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix} u_{11}
\backslash

\backslash
 u_{12} 
\backslash
end{pmatrix} 
\backslash
, - 
\backslash
, 
\backslash
lambda_1 
\backslash
, 
\backslash
begin{pmatrix}u_{11}
\backslash

\backslash
u_{12} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_1
\backslash
right)
\backslash
,u_{11} 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_1x_2}
\backslash
,u_{12} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2}
\backslash
,u_{11} 
\backslash
, + 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_1
\backslash
right)
\backslash
,u_{12} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
rho = 
\backslash
frac{
\backslash
sigma_{x_1x_2}}{
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
sigma_{x_2}}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_1
\backslash
right)
\backslash
,u_{11} 
\backslash
, + 
\backslash
, 
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}
\backslash
,u_{12} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}
\backslash
,u_{11} 
\backslash
, + 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_1
\backslash
right)
\backslash
,u_{12} 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_1 
\backslash
, &= 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, + 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

u_{12} 
\backslash
, &= 
\backslash
, 
\backslash
frac{-
\backslash
,
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_1
\backslash
right)}{
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\backslash
,u_{11} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}}{2
\backslash
,
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\backslash
,u_{11}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Solution for the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_1$
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} u_{11}
\backslash

\backslash
 u_{12} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} d
\backslash

\backslash
 d
\backslash
,b 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where the term 
\begin_inset ERT
status open

\begin_layout Plain Layout

$d$
\end_layout

\end_inset

 is any scalar value and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$b$
\end_layout

\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

b 
\backslash
, = 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}}{2
\backslash
,
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Choose 
\begin_inset ERT
status open

\begin_layout Plain Layout

$d$
\end_layout

\end_inset

 to satisfy:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
lVert 
\backslash
vec{u}_1 
\backslash
rVert^2 
\backslash
, = 
\backslash
, 
\backslash
vec{u}_1^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout

u_{11}^2 
\backslash
, + 
\backslash
, u_{12}^2 
\backslash
, = 
\backslash
, d^2 
\backslash
, + 
\backslash
, d^2
\backslash
,b^2 
\backslash
, =  
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

d^2
\backslash
,
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right) 
\backslash
, = 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

d^2 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right)}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sqrt{d^2} 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right)}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix} d 
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right)}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{aligned}
\end_layout

\begin_layout Plain Layout

d 
\backslash
, > 
\backslash
,0, 
\backslash
, 
\backslash
begin{vmatrix} d 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, d 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right)}} 
\backslash
, &
\backslash
longrightarrow 
\backslash
, d 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right)}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

d 
\backslash
, < 
\backslash
,0, 
\backslash
, 
\backslash
begin{vmatrix} d 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, -
\backslash
,d 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right)}} 
\backslash
, &
\backslash
longrightarrow 
\backslash
, d 
\backslash
, = 
\backslash
, 
\backslash
frac{-1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, b^2
\backslash
right)}}
\end_layout

\begin_layout Plain Layout


\backslash
end{aligned}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So finally I have the orthonormal eigenvector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_1$
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} u_{11}
\backslash

\backslash
 u_{12} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} d
\backslash

\backslash
 d
\backslash
,b 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
frac{1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}}
\backslash

\backslash
 
\backslash
frac{b}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}} 
\backslash
end{pmatrix} 
\backslash
text{ or } 
\backslash
begin{pmatrix} 
\backslash
frac{-
\backslash
,1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}}
\backslash

\backslash
 
\backslash
frac{-
\backslash
,b}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}} 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, I repeat the same procedure to get the orthonormal eigenvector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_2$
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 
\backslash
lambda_2 
\backslash
, 
\backslash
vec{u}_2
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

&
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix} u_{21}
\backslash

\backslash
 u_{22} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
lambda_2 
\backslash
, 
\backslash
begin{pmatrix}u_{21}
\backslash

\backslash
u_{22} 
\backslash
end{pmatrix}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} & 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix} u_{21}
\backslash

\backslash
 u_{22} 
\backslash
end{pmatrix} 
\backslash
, - 
\backslash
, 
\backslash
lambda_2 
\backslash
, 
\backslash
begin{pmatrix}u_{21}
\backslash

\backslash
u_{22} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_2
\backslash
right)
\backslash
,u_{21} 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_1x_2}
\backslash
,u_{22} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2}
\backslash
,u_{21} 
\backslash
, + 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_2
\backslash
right)
\backslash
,u_{22} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
rho = 
\backslash
frac{
\backslash
sigma_{x_1x_2}}{
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
sigma_{x_2}}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_2
\backslash
right)
\backslash
,u_{21} 
\backslash
, + 
\backslash
, 
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}
\backslash
,u_{22} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}
\backslash
,u_{21} 
\backslash
, + 
\backslash
, 
\backslash
left(
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_2
\backslash
right)
\backslash
,u_{22} 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_2 
\backslash
, &= 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, + 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

u_{22} 
\backslash
, &= 
\backslash
, 
\backslash
frac{-
\backslash
,
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_2
\backslash
right)}{
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\backslash
,u_{21} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}}{2
\backslash
,
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\backslash
,u_{21}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Solution for the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_2$
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} u_{21}
\backslash

\backslash
 u_{22} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} e
\backslash

\backslash
 e
\backslash
,c 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where the term 
\begin_inset ERT
status open

\begin_layout Plain Layout

$e$
\end_layout

\end_inset

 is any scalar value and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$c$
\end_layout

\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

c 
\backslash
, = 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}}{2
\backslash
,
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Choose 
\begin_inset ERT
status open

\begin_layout Plain Layout

$e$
\end_layout

\end_inset

 to satisfy:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
lVert 
\backslash
vec{u}_2 
\backslash
rVert^2 
\backslash
, = 
\backslash
, 
\backslash
vec{u}_2^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout

u_{21}^2 
\backslash
, + 
\backslash
, u_{22}^2 
\backslash
, = 
\backslash
, e^2 
\backslash
, + 
\backslash
, e^2
\backslash
,c^2 
\backslash
, =  
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

e^2
\backslash
,
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right) 
\backslash
, = 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

e^2 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right)}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sqrt{e^2} 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right)}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix} e 
\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right)}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{aligned}
\end_layout

\begin_layout Plain Layout

e 
\backslash
, > 
\backslash
,0, 
\backslash
, 
\backslash
begin{vmatrix} e 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, e 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right)}} 
\backslash
, &
\backslash
longrightarrow 
\backslash
, e 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right)}}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

e 
\backslash
, < 
\backslash
,0, 
\backslash
, 
\backslash
begin{vmatrix} e 
\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, -
\backslash
, e 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right)}} 
\backslash
, &
\backslash
longrightarrow 
\backslash
, e 
\backslash
, = 
\backslash
, 
\backslash
frac{-1}{
\backslash
sqrt{
\backslash
left(1 
\backslash
, + 
\backslash
, c^2
\backslash
right)}}
\end_layout

\begin_layout Plain Layout


\backslash
end{aligned}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So finally I have:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} u_{21}
\backslash

\backslash
 u_{22} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} e
\backslash

\backslash
 e
\backslash
,c 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
frac{1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, c^2}}
\backslash

\backslash
 
\backslash
frac{c}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}} 
\backslash
end{pmatrix} 
\backslash
text{ or } 
\backslash
begin{pmatrix} 
\backslash
frac{-
\backslash
,1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, c^2}}
\backslash

\backslash
 
\backslash
frac{-
\backslash
,c}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, c^2}} 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Summary:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-
\backslash
,1 
\backslash
, < 
\backslash
, 
\backslash
rho 
\backslash
, < 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\backslash
text{Note the lack of the equal symbol} 
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, + 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lambda_2 
\backslash
, &= 
\backslash
, 
\backslash
frac{1}{2}
\backslash
begin{pmatrix}
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

b 
\backslash
, = 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}}{2
\backslash
,
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

c 
\backslash
, = 
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_2}^2 
\backslash
, - 
\backslash
, 
\backslash
sigma_{x_1}^2 
\backslash
, - 
\backslash
, 
\backslash
sqrt{
\backslash
left(
\backslash
sigma_{x_1}^2 
\backslash
, + 
\backslash
, 
\backslash
sigma_{x_2}^2
\backslash
right)^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_{x_1}^2 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, 
\backslash
left(1 
\backslash
, - 
\backslash
, 
\backslash
rho^2
\backslash
right)}}{2
\backslash
,
\backslash
rho
\backslash
,
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} u_{11}
\backslash

\backslash
 u_{12} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
frac{1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}}
\backslash

\backslash
 
\backslash
frac{b}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}} 
\backslash
end{pmatrix} 
\backslash
text{ or } 
\backslash
begin{pmatrix} 
\backslash
frac{-
\backslash
,1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}}
\backslash

\backslash
 
\backslash
frac{-
\backslash
,b}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, b^2}} 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} u_{21}
\backslash

\backslash
 u_{22} 
\backslash
end{pmatrix} 
\backslash
, =  
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
frac{1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, c^2}}
\backslash

\backslash
 
\backslash
frac{c}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, c^2}} 
\backslash
end{pmatrix} 
\backslash
text{ or } 
\backslash
begin{pmatrix} 
\backslash
frac{-
\backslash
,1}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, c^2}}
\backslash

\backslash
 
\backslash
frac{-
\backslash
,c}{
\backslash
sqrt{1 
\backslash
, + 
\backslash
, c^2}} 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_1$
\end_layout

\end_inset

 and the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_2$
\end_layout

\end_inset

 are orthonormal:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout

U^{T} 
\backslash
, 
\backslash
cdot 
\backslash
, U 
\backslash
, = 
\backslash
, I ~ 
\backslash
longrightarrow ~ U^{T} 
\backslash
, = 
\backslash
, U^{-1}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{12}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{21} & u_{22}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{21}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{12} & u_{22}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

1 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lVert 
\backslash
vec{u}_1 
\backslash
rVert^2 
\backslash
, = 
\backslash
, 
\backslash
langle 
\backslash
vec{u}_1,
\backslash
, 
\backslash
vec{u}_1 
\backslash
rangle 
\backslash
, = 
\backslash
, 
\backslash
vec{u}_1^{T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_1 
\backslash
, = 
\backslash
, u_{11}^2 
\backslash
, + 
\backslash
, u_{12}^2 
\backslash
, = 
\backslash
, 1
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lVert 
\backslash
vec{u}_2 
\backslash
rVert^2 
\backslash
, = 
\backslash
, 
\backslash
langle 
\backslash
vec{u}_2,
\backslash
, 
\backslash
vec{u}_2 
\backslash
rangle 
\backslash
, = 
\backslash
, 
\backslash
vec{u}_2^{T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_2 
\backslash
, = 
\backslash
, u_{21}^2 
\backslash
, + 
\backslash
, u_{22}^2 
\backslash
, = 
\backslash
, 1
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
langle 
\backslash
vec{u}_1,
\backslash
, 
\backslash
vec{u}_2 
\backslash
rangle 
\backslash
, = 
\backslash
vec{u}_1^{T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_2 
\backslash
, = 
\backslash
, u_{11}
\backslash
,u_{21} 
\backslash
, + 
\backslash
, u_{12}
\backslash
,u_{22} 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Examples:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

2^2 & 5
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

5 & 3^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig17.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

2^2 & -5
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-5 & 3^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig18.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

3^2 & 5
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

5 & 2^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig19.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

3^2 & -5
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-5 & 2^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig20.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1} 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}} 
\backslash
end{pmatrix} 
\backslash
text{ or } 
\backslash
begin{pmatrix} -
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}}
\backslash

\backslash
 -
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}} 
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}}
\backslash

\backslash
 -
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}} 
\backslash
end{pmatrix} 
\backslash
text{ or } 
\backslash
begin{pmatrix} -
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{2}} 
\backslash
end{pmatrix}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_1}^2
\backslash
,
\backslash
left(1
\backslash
,+
\backslash
,
\backslash
rho
\backslash
right)
\backslash
,=
\backslash
,
\backslash
sigma_{x_1}^2
\backslash
,+
\backslash
,
\backslash
sigma_{x_1x_2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lambda_2 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_1}^2
\backslash
,
\backslash
left(1
\backslash
,-
\backslash
,
\backslash
rho
\backslash
right)
\backslash
,=
\backslash
,
\backslash
sigma_{x_1}^2
\backslash
,-
\backslash
,
\backslash
sigma_{x_1x_2}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore, if 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, > 
\backslash
, 0$
\end_layout

\end_inset

, then the major axis of the ellipse will be in the direction of the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$45^{
\backslash
circ}$
\end_layout

\end_inset

 line and the minor axis of the ellipse will be in the direction of the
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$135^{
\backslash
circ} 
\backslash
left(45^{
\backslash
circ} 
\backslash
, + 
\backslash
, 90^{
\backslash
circ}
\backslash
right)$
\end_layout

\end_inset

 line.
\end_layout

\begin_layout Standard
Therefore, if 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
, 0$
\end_layout

\end_inset

, then the major axis of the ellipse will be in the direction of the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$135^{
\backslash
circ}$
\end_layout

\end_inset

 line and the minor axis of the ellipse will be in the direction of the
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$45^{
\backslash
circ} 
\backslash
left(135^{
\backslash
circ} 
\backslash
, - 
\backslash
, 90^{
\backslash
circ}
\backslash
right)$
\end_layout

\end_inset

 line.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

3^2 & 5
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

5 & 3^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig26.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

3^2 & -5
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

-5 & 3^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig27.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's describe briefly how to plot a 2D ellipse given the directions and
 lengths of its two principal axes.
 The directions of the ellipse's two principal axes are given by the orthonormal
 eigenvectors 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_1$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_2$
\end_layout

\end_inset

.
 The length of the ellipse's two principal axes are given by 
\begin_inset ERT
status open

\begin_layout Plain Layout

$2
\backslash
,K
\backslash
,
\backslash
sqrt{
\backslash
lambda_1}$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$2
\backslash
,K
\backslash
,
\backslash
sqrt{
\backslash
lambda_2}$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

U 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{21}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{12} & u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} ~~~~~ D 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
lambda_2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

x_1 & y_1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

x_j & y_j
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

x_M & y_M
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
, &= 
\backslash
, K 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(
\backslash
theta_1
\backslash
right) & 
\backslash
sin
\backslash
left(
\backslash
theta_1
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(
\backslash
theta_j
\backslash
right) & 
\backslash
sin
\backslash
left(
\backslash
theta_j
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(
\backslash
theta_M
\backslash
right) & 
\backslash
sin
\backslash
left(
\backslash
theta_M
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sqrt{
\backslash
lambda_1} & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
sqrt{
\backslash
lambda_2}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

u_{11} & u_{12}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

u_{21} & u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, K 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(
\backslash
theta_1
\backslash
right) & 
\backslash
sin
\backslash
left(
\backslash
theta_1
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(
\backslash
theta_j
\backslash
right) & 
\backslash
sin
\backslash
left(
\backslash
theta_j
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
cos
\backslash
left(
\backslash
theta_M
\backslash
right) & 
\backslash
sin
\backslash
left(
\backslash
theta_M
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{11} & 
\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{12}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{21} & 
\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, K 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{11}
\backslash
,
\backslash
cos
\backslash
left(
\backslash
theta_1
\backslash
right) 
\backslash
, + 
\backslash
,  
\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{21}
\backslash
,
\backslash
sin
\backslash
left(
\backslash
theta_1
\backslash
right) &  
\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{12}
\backslash
,
\backslash
cos
\backslash
left(
\backslash
theta_1
\backslash
right) 
\backslash
, + 
\backslash
,  
\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{22}
\backslash
,
\backslash
sin
\backslash
left(
\backslash
theta_1
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{11}
\backslash
,
\backslash
cos
\backslash
left(
\backslash
theta_j
\backslash
right) 
\backslash
, + 
\backslash
,  
\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{21}
\backslash
,
\backslash
sin
\backslash
left(
\backslash
theta_j
\backslash
right) &  
\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{12}
\backslash
,
\backslash
cos
\backslash
left(
\backslash
theta_j
\backslash
right) 
\backslash
, + 
\backslash
,  
\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{22}
\backslash
,
\backslash
sin
\backslash
left(
\backslash
theta_j
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{11}
\backslash
,
\backslash
cos
\backslash
left(
\backslash
theta_M
\backslash
right) 
\backslash
, + 
\backslash
,  
\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{21}
\backslash
,
\backslash
sin
\backslash
left(
\backslash
theta_M
\backslash
right) &  
\backslash
sqrt{
\backslash
lambda_1}
\backslash
,u_{12}
\backslash
,
\backslash
cos
\backslash
left(
\backslash
theta_M
\backslash
right) 
\backslash
, + 
\backslash
,  
\backslash
sqrt{
\backslash
lambda_2}
\backslash
,u_{22}
\backslash
,
\backslash
sin
\backslash
left(
\backslash
theta_M
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
theta_j 
\backslash
, = 
\backslash
, 
\backslash
frac{360}{M}
\backslash
,j
\backslash

\backslash
j 
\backslash
,=
\backslash
, 0,
\backslash
, 
\backslash
ldots,
\backslash
, M
\backslash
,-
\backslash
,1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\backslash
text{M is the desired number of points to draw} 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, I'm going to describe one particular case that occurs when 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
,0$
\end_layout

\end_inset

, which it's the same as saying 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
When 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 
\backslash
rho 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, 
\backslash
neq 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} -1 
\backslash
, < 
\backslash
, 
\backslash
rho 
\backslash
, < 
\backslash
, 1 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset

 the variables 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_1$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_2$
\end_layout

\end_inset

 are correlated.
 
\end_layout

\begin_layout Standard
When 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 
\backslash
rho 
\backslash
, 
\backslash
sigma_{x_1} 
\backslash
, 
\backslash
sigma_{x_2} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\backslash
rho 
\backslash
, = 
\backslash
, 0 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset

 the variables 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_1$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_2$
\end_layout

\end_inset

 are incorrelated.
 Now, one interesting result stands that if the joint distribution among
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 random variables is Gaussian, then the marginal distribution of each random
 variable is also Gaussian, even the conditional distributions are Gaussian.
 The other way around is not true.
 If you have 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 random variables, each of those distributed following a Gaussian PDF, then
 the random vector doesn't have to be distributed following a Gaussian PDF
 
\begin_inset Foot
status open

\begin_layout Plain Layout
Not 100% sure about this last fact.
 If you ever need this result, check it out firstly.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
So because the joint distribution between the random variables 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_1$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_2$
\end_layout

\end_inset

 is Gaussian, then the random variables 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_1$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_2$
\end_layout

\end_inset

 are also distributed accordingly to Gaussian PDFs.
 For random variables distributed accordingly to Gaussian distributions
 incorrelation implies independency.
\end_layout

\begin_layout Standard
Every computation is easier when 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 0 & 
\backslash
ldots & 0 & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
sigma_{x_2}^2 & 
\backslash
ldots & 0 & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 0 & 
\backslash
ldots & 
\backslash
sigma_{x_j}^2 & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 0 & 
\backslash
ldots & 0 & 
\backslash
ldots & 
\backslash
sigma_{x_N}^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^N 
\backslash
lambda_j
\backslash
,
\backslash
vec{e}_j
\backslash
,
\backslash
vec{e}_j^{
\backslash
,T}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{e}_j 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 0
\backslash

\backslash
 0
\backslash

\backslash
 
\backslash
vdots
\backslash

\backslash
 1
\backslash

\backslash
 
\backslash
vdots
\backslash

\backslash
 0 
\backslash
end{pmatrix} 
\backslash
begin{matrix} 
\backslash
textcolor{white}{0}
\backslash

\backslash
 
\backslash
textcolor{white}{0}
\backslash

\backslash
 
\backslash
textcolor{white}{
\backslash
vdots}
\backslash

\backslash
 
\backslash
longleftarrow ~ j-th  
\backslash
text{ position}
\backslash

\backslash
 
\backslash
textcolor{white}{
\backslash
vdots}
\backslash

\backslash
 
\backslash
textcolor{white}{0}
\backslash
end{matrix}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lambda_j 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_j}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma^{-1} 
\backslash
, = 
\backslash
, 
\backslash
sum_{j 
\backslash
, = 
\backslash
, 1}^N 
\backslash
frac{1}{
\backslash
lambda_j}
\backslash
,
\backslash
vec{e}_j
\backslash
,
\backslash
vec{e}_j^{
\backslash
,T} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

1/
\backslash
sigma_{x_1}^2 & 0 & 
\backslash
ldots & 0 & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 1/
\backslash
sigma_{x_2}^2 & 
\backslash
ldots & 0 & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 0 & 
\backslash
ldots & 1/
\backslash
sigma_{x_j}^2 & 
\backslash
ldots & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
vdots & 
\backslash
ddots & 
\backslash
vdots
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 0 & 
\backslash
ldots & 0 & 
\backslash
ldots & 1/
\backslash
sigma_{x_N}^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Particularizing for the 2D Gaussian:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, &= 
\backslash
, 
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1}^2 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
Sigma^{-1} 
\backslash
, &= 
\backslash
, 
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
frac{1}{
\backslash
sigma_{x_1}^2} & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
frac{1}{
\backslash
sigma_{x_2}^2}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{e}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 1
\backslash

\backslash
 0
\backslash
end{pmatrix} ~~ 
\backslash
vec{e}_2 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 0
\backslash

\backslash
 1
\backslash
end{pmatrix}
\backslash

\backslash

\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_1}^2 ~~ 
\backslash
lambda_2 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}^2
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right), ~ 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right
\backslash
rangle 
\backslash
, &= 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
begin{pmatrix}x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1, x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2 
\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
frac{1}{
\backslash
sigma_{x_1}^2} & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 
\backslash
frac{1}{
\backslash
sigma_{x_2}^2}
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash

\backslash
 x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2 
\backslash
end{pmatrix} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{
\backslash
left(x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash
right)^2}{
\backslash
sigma_{x_1}^2} 
\backslash
, + 
\backslash
, 
\backslash
frac{
\backslash
left(x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2
\backslash
right)^2}{
\backslash
sigma_{x_2}^2}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{e_{11}^2}{
\backslash
lambda_1}
\backslash
,
\backslash
cdot
\backslash
,
\backslash
left(x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash
right)^2 
\backslash
, + 
\backslash
, 
\backslash
frac{e_{22}^2}{
\backslash
lambda_2}
\backslash
,
\backslash
cdot
\backslash
,
\backslash
left(x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2
\backslash
right)^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following expression corresponds to an ellipse centered at the vector
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{
\backslash
mu}$
\end_layout

\end_inset

, with the directions of its principal axes defined by the orthonormal eigenvect
ors 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{e}_1$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{e}_2$
\end_layout

\end_inset

, i.e, they are parallels to the x-axis and y-axis, and with the length of
 its principal axes defined by 
\begin_inset ERT
status open

\begin_layout Plain Layout

$K
\backslash
sigma_{x_1}$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left
\backslash
langle 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right), ~ 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
right
\backslash
rangle 
\backslash
, &= 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right)^T 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
Sigma^{-1} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
left(
\backslash
vec{x} 
\backslash
, - 
\backslash
, 
\backslash
vec{
\backslash
mu}
\backslash
right) 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
frac{
\backslash
left(x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1
\backslash
right)^2}{
\backslash
sigma_{x_1}^2} 
\backslash
, + 
\backslash
, 
\backslash
frac{
\backslash
left(x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2
\backslash
right)^2}{
\backslash
sigma_{x_2}^2} 
\backslash
, = 
\backslash
, K^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
left(
\backslash
frac{x_1 
\backslash
, - 
\backslash
, 
\backslash
mu_1}{K
\backslash
,
\backslash
sigma_{x_1}}
\backslash
right)^2 
\backslash
, + 
\backslash
, 
\backslash
left(
\backslash
frac{x_2 
\backslash
, - 
\backslash
, 
\backslash
mu_2}{K
\backslash
,
\backslash
sigma_{x_2}}
\backslash
right)^2 
\backslash
, = 
\backslash
, 1
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

1^2 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 3^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig35.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

3^2 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 1^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig36.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 15 
\backslash

\backslash
 15 
\backslash
end{pmatrix} ~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\end_layout

\begin_layout Plain Layout

3^2 & 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

0 & 3^2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig37.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, as we can see, when 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1} 
\backslash
, > 
\backslash
, 
\backslash
sigma_{x_2}$
\end_layout

\end_inset

 then the ellipse has its major axis along the x-axis.
\end_layout

\begin_layout Itemize
If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_2} 
\backslash
, > 
\backslash
, 
\backslash
sigma_{x_1}$
\end_layout

\end_inset

 then the ellipse has its major axis along the y-axis.
\end_layout

\begin_layout Itemize
If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1} 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}$
\end_layout

\end_inset

 then the ellipse converts into a circumference, and its radius is equal
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$r 
\backslash
, = 
\backslash
, K
\backslash
sigma_{x_1} 
\backslash
, = 
\backslash
, K
\backslash
sigma_{x_2}$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Exercise:
\end_layout

\begin_layout Standard
Let's consider a brief exercise.
 Let's suppose that we are partially given a Gaussian joint distribution
 between the random variable 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_1$
\end_layout

\end_inset

 and the random variable 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x_2$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{x} 
\backslash
, = 
\backslash
,
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout

x_1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

x_2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} ~~~~~ p
\backslash
left(
\backslash
vec{x}
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
mathcal{N}
\backslash
left(
\backslash
vec{
\backslash
mu}, 
\backslash
Sigma
\backslash
right) ~~~~~ 
\backslash
vec{
\backslash
mu} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
mu_1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
mu_2
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} ~~~~~ 
\backslash
Sigma 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
sigma^2 & ?
\backslash

\backslash
 ? & 
\backslash
sigma^2 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
With the given partial Gaussian joint distribution let's try to associate
 it with one of the pictures below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig39.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
First thing 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1}^2 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, = 
\backslash
, 
\backslash
sigma^2$
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

, then we would have a circumference.
 So, figure A.
\end_layout

\begin_layout Standard
If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, 
\backslash
neq 
\backslash
, 0$
\end_layout

\end_inset

, then we would have an ellipse.
 If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, > 
\backslash
, 0$
\end_layout

\end_inset

, then the major axis of the ellipse will be in the direction of the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$45^{
\backslash
circ}$
\end_layout

\end_inset

 line and the minor axis of the ellipse will be in the direction of the
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$135^{
\backslash
circ} 
\backslash
left(45^{
\backslash
circ} 
\backslash
, + 
\backslash
, 90^{
\backslash
circ}
\backslash
right)$
\end_layout

\end_inset

 line.
 So, figure E.
\end_layout

\begin_layout Standard
If 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, < 
\backslash
, 0$
\end_layout

\end_inset

, then the major axis of the ellipse will be in the direction of the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$135^{
\backslash
circ}$
\end_layout

\end_inset

 line and the minor axis of the ellipse will be in the direction of the
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$45^{
\backslash
circ} 
\backslash
left(135^{
\backslash
circ} 
\backslash
, - 
\backslash
, 90^{
\backslash
circ}
\backslash
right)$
\end_layout

\end_inset

 line.
 So, figure D.
\end_layout

\begin_layout Standard
We would have the figure B when 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1}^2 
\backslash
, > 
\backslash
, 
\backslash
sigma_{x_2}^2$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
We would have the figure C when 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1}^2 
\backslash
, < 
\backslash
, 
\backslash
sigma_{x_2}^2$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1x_2} 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Therefore, since we have 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_{x_1}^2 
\backslash
, = 
\backslash
, 
\backslash
sigma_{x_2}^2 
\backslash
, = 
\backslash
, 
\backslash
sigma^2$
\end_layout

\end_inset

 we can't have either figure B or figure C.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
EXERCISE
\end_layout

\begin_layout Standard
The lever arm is fixed to the wall at the point 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

.
 The lever arm can rotate around the point A.
 The motor moves the point 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P$
\end_layout

\end_inset

 a distance 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

.
 First, calculate the relation between the random variable 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y$
\end_layout

\end_inset

 and the random variable 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

.
 Calculate the eigenvalues and the eigenvectors of the covariance matrix
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 that results from the relation between the random variables 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig41.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig42.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The free extreme of the lever arm moves a distance:
\end_layout

\begin_layout Standard
gather
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
sin
\backslash
left(
\backslash
alpha
\backslash
right) 
\backslash
, = 
\backslash
, 
\backslash
frac{x}{l}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y 
\backslash
, = 
\backslash
, 2l 
\backslash
, 
\backslash
sin
\backslash
left(
\backslash
alpha
\backslash
right) 
\backslash
, = 
\backslash
, 2l 
\backslash
, 
\backslash
frac{x}{l} 
\backslash
, = 
\backslash
, 2x
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We are told that the error in the motor motion, i.e, the error in the 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

 distance is:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

e_x 
\backslash
, &= 
\backslash
, 
\backslash
mathcal{N}
\backslash
left(
\backslash
mu,
\backslash
, 
\backslash
sigma_x^2
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
mu 
\backslash
, &= 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The distance 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y$
\end_layout

\end_inset

 only depends on the motor, so, because the motor has an inherent error
 
\begin_inset ERT
status open

\begin_layout Plain Layout

$e_x$
\end_layout

\end_inset

 that is distributed according to a Gaussian distribution, the error in
 the motion in the free extreme of the lever arm also follows a Gaussian
 distribution.
 Let's suppose that the motor moves a distance 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

 with some error:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

x' 
\backslash
, &= 
\backslash
, x 
\backslash
, + 
\backslash
, e_x
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y' 
\backslash
, &= 
\backslash
, y 
\backslash
, + 
\backslash
, e_y 
\backslash
, = 
\backslash
, 2x' 
\backslash
, = 
\backslash
, 2
\backslash
left(x 
\backslash
, + 
\backslash
, e_x
\backslash
right) 
\backslash
, = 
\backslash
, 2x 
\backslash
, + 
\backslash
, 2e_x
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

y 
\backslash
, &= 
\backslash
, 2x
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

e_y 
\backslash
, &= 
\backslash
, 2e_x
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
mu_x 
\backslash
, &
\backslash
triangleq 
\backslash
, E
\backslash
left(e_x
\backslash
right) 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_x^2 
\backslash
, &
\backslash
triangleq 
\backslash
, E
\backslash
left(
\backslash
left(e_x 
\backslash
, - 
\backslash
, E
\backslash
left(e_x
\backslash
right)
\backslash
right)^2
\backslash
right) 
\backslash
, = 
\backslash
, E
\backslash
left(e_x^2
\backslash
right)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
mu_y 
\backslash
, &
\backslash
triangleq 
\backslash
, E
\backslash
left(e_y
\backslash
right) 
\backslash
, = 
\backslash
, E
\backslash
left(2e_x
\backslash
right) 
\backslash
, = 
\backslash
, 2E
\backslash
left(e_x
\backslash
right) 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_y^2 
\backslash
, &
\backslash
triangleq 
\backslash
, E
\backslash
left(
\backslash
left(e_y 
\backslash
, - 
\backslash
, E
\backslash
left(e_y
\backslash
right)
\backslash
right)^2
\backslash
right) 
\backslash
, = 
\backslash
, E
\backslash
left(e_y^2
\backslash
right) 
\backslash
, = 
\backslash
, E
\backslash
left(4e_x^2
\backslash
right) 
\backslash
, = 
\backslash
, 4E
\backslash
left(e_x^2
\backslash
right) 
\backslash
, = 
\backslash
, 4
\backslash
sigma_x^2
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

e_y 
\backslash
, = 
\backslash
, 
\backslash
mathcal{N}
\backslash
left(0,
\backslash
, 4
\backslash
sigma_x^2
\backslash
right)
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{e} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}e_x 
\backslash

\backslash
 e_y  
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, &= 
\backslash
, E
\backslash
left(
\backslash
left(
\backslash
vec{e} 
\backslash
, - 
\backslash
, E
\backslash
left(
\backslash
vec{e}
\backslash
right)
\backslash
right)
\backslash
,
\backslash
left(
\backslash
vec{e} 
\backslash
, - 
\backslash
, E
\backslash
left(
\backslash
vec{e}
\backslash
right)
\backslash
right)^T
\backslash
right) 
\backslash
, = 
\backslash
, E
\backslash
left(
\backslash
vec{e} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{e}^{
\backslash
,T}
\backslash
right) 
\backslash
, = 
\backslash
, E
\backslash
begin{pmatrix} 
\backslash
begin{pmatrix}e_x
\backslash

\backslash
 e_y 
\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
begin{pmatrix}e_x & e_y 
\backslash
end{pmatrix} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, E
\backslash
begin{pmatrix} 
\backslash
begin{pmatrix} e_x^2 & e_xe_y
\backslash

\backslash
 e_xe_y & e_y^2 
\backslash
end{pmatrix}
\backslash
end{pmatrix} 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, E
\backslash
begin{pmatrix}
\backslash
begin{pmatrix}e_x^2 & 2e_x^2
\backslash

\backslash
 2e_x^2 & 4e_x^2 
\backslash
end{pmatrix}
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\backslash
sigma_x^2 & 2
\backslash
sigma_x^2
\backslash

\backslash
 2
\backslash
sigma_x^2 & 4
\backslash
sigma_x^2 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
sigma_x^2 
\backslash
, 
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1} 
\backslash
,&=
\backslash
, 
\backslash
sigma_x
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_2} 
\backslash
,&=
\backslash
, 2
\backslash
,
\backslash
sigma_x
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
sigma_{x_1x_2} 
\backslash
,&= 
\backslash
, 2
\backslash
,
\backslash
sigma_x^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
rho 
\backslash
,&=
\backslash
, 
\backslash
frac{
\backslash
sigma_{x_1x_2}}{
\backslash
sigma_{x_1}
\backslash
,
\backslash
sigma_{x_2}} 
\backslash
,=
\backslash
, 
\backslash
frac{2
\backslash
,
\backslash
sigma_x^2}{
\backslash
sigma_x 
\backslash
, 2
\backslash
,
\backslash
sigma_x} 
\backslash
,=
\backslash
, 1
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Obviously, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
rho 
\backslash
, = 
\backslash
, 1$
\end_layout

\end_inset

 because the relation between the random variables 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y$
\end_layout

\end_inset

 is linear.
\end_layout

\begin_layout Standard
Calculate the eigenvalues and eigenvectors of the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{vmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\backslash
,I
\end_layout

\begin_layout Plain Layout


\backslash
end{vmatrix} 
\backslash
, &= 
\backslash
, 
\backslash
begin{vmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_x^2 
\backslash
, 
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4 
\backslash
end{pmatrix} 
\backslash
, - 
\backslash
, 
\backslash
begin{pmatrix}
\backslash
lambda_j & 0
\backslash

\backslash
 0 & 
\backslash
lambda_j 
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{vmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{vmatrix} 
\backslash
begin{pmatrix}
\backslash
sigma_x^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j & 2
\backslash
sigma_x^2
\backslash

\backslash
 2
\backslash
sigma_x^2 & 4
\backslash
sigma_x^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j 
\backslash
end{pmatrix}
\backslash
end{vmatrix} 
\backslash
, =
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
left(
\backslash
sigma_x^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\backslash
right)
\backslash
left(4
\backslash
,
\backslash
sigma_x^2 
\backslash
, - 
\backslash
, 
\backslash
lambda_j
\backslash
right) 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_x^2 
\backslash
, = 
\backslash
, -
\backslash
,
\backslash
lambda_j
\backslash
,
\backslash
sigma_x^2 
\backslash
, - 
\backslash
, 4
\backslash
,
\backslash
sigma_x^2
\backslash
,
\backslash
lambda_j 
\backslash
, + 
\backslash
, 
\backslash
lambda_j^2 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
lambda_j^2 
\backslash
, - 
\backslash
, 5
\backslash
,
\backslash
sigma_x^2
\backslash
lambda_j 
\backslash
, = 
\backslash
, 
\backslash
lambda_j
\backslash
,
\backslash
left(
\backslash
lambda_j 
\backslash
, - 
\backslash
, 5
\backslash
,
\backslash
sigma_x^2
\backslash
right) 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
lambda_1 
\backslash
, &= 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
lambda_2 
\backslash
, &= 
\backslash
, 5
\backslash
sigma_x^2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_1
\backslash
,I 
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}
\backslash
sigma_x^2 
\backslash
, 
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4 
\backslash
end{pmatrix} 
\backslash
, - 
\backslash
, 
\backslash
begin{pmatrix}
\backslash
lambda_1 & 0
\backslash

\backslash
 0 & 
\backslash
lambda_1
\backslash
end{pmatrix}
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}u_{11}
\backslash

\backslash
u_{12} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
sigma_x^2 
\backslash
, 
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4 
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}u_{11}
\backslash

\backslash
u_{12} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}0
\backslash

\backslash
0
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
sigma_x^2
\backslash
,u_{11} 
\backslash
, + 
\backslash
, 2
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{12} 
\backslash
, &= 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

2
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{11} 
\backslash
, + 
\backslash
, 4
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{12} 
\backslash
, &= 
\backslash
, 0 ~ 
\backslash
longrightarrow ~ 
\backslash
sigma_x^2
\backslash
,u_{11} 
\backslash
, + 
\backslash
, 2
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{12} 
\backslash
, = 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Address
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

u_{11} 
\backslash
, = 
\backslash
, -
\backslash
,
\backslash
frac{2
\backslash
,
\backslash
sigma_x^2}{
\backslash
sigma_x^2}
\backslash
,u_{12} 
\backslash
, = 
\backslash
, -2
\backslash
,u_{12}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We choose:
\end_layout

\begin_layout Address
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout

u_{12} 
\backslash
, = 
\backslash
, 1 ~ 
\backslash
longrightarrow ~ u_{11} 
\backslash
, = 
\backslash
, -
\backslash
,2
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} -
\backslash
,2
\backslash

\backslash
+
\backslash
,1
\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_1$
\end_layout

\end_inset

 is normalized:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
lVert 
\backslash
vec{u}_1 
\backslash
rVert 
\backslash
, = 
\backslash
, 
\backslash
sqrt{
\backslash
langle 
\backslash
vec{u}_1,
\backslash
, 
\backslash
vec{u}_1 
\backslash
rangle} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{
\backslash
vec{u}_1^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_1} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{u_{11}^2 
\backslash
, + 
\backslash
, u_{12}^2} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{
\backslash
left(-
\backslash
,2
\backslash
right)^2 
\backslash
,+
\backslash
, 1^2} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{5}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_1 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
frac{u_{11}}{
\backslash
lVert 
\backslash
vec{u}_1 
\backslash
rVert} 
\backslash

\backslash
 
\backslash
frac{u_{12}}{
\backslash
lVert 
\backslash
vec{u}_1 
\backslash
rVert} 
\backslash
end{pmatrix} 
\backslash
,=
\backslash
, 
\backslash
begin{pmatrix} -
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
begin{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
, - 
\backslash
, 
\backslash
lambda_2
\backslash
,I 
\end_layout

\begin_layout Plain Layout


\backslash
end{pmatrix} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_2 
\backslash
, &= 
\backslash
, 
\backslash
begin{pmatrix}
\backslash
sigma_x^2 
\backslash
, 
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4 
\backslash
end{pmatrix} 
\backslash
, - 
\backslash
, 
\backslash
begin{pmatrix}
\backslash
lambda_2 & 0
\backslash

\backslash
 0 & 
\backslash
lambda_2
\backslash
end{pmatrix}
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}u_{21}
\backslash

\backslash
u_{22} 
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
sigma_x^2 
\backslash
, 
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4 
\backslash
end{pmatrix} 
\backslash
, - 
\backslash
, 5
\backslash
,
\backslash
sigma_x^2
\backslash
begin{pmatrix}1 & 0
\backslash

\backslash
 0 & 1
\backslash
end{pmatrix}
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}u_{21}
\backslash

\backslash
u_{22} 
\backslash
end{pmatrix} 
\backslash
, =
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

&= 
\backslash
, 
\backslash
begin{pmatrix}-4
\backslash
,
\backslash
sigma_x^2 & 2
\backslash
,
\backslash
sigma_x^2
\backslash

\backslash
 2
\backslash
,
\backslash
sigma_x^2 & -
\backslash
,
\backslash
sigma_x^2 
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}u_{21}
\backslash

\backslash
u_{22} 
\backslash
end{pmatrix}  = 
\backslash
, 
\backslash
begin{pmatrix}0
\backslash

\backslash
0
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

-4
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{21} 
\backslash
, + 
\backslash
, 2
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{22} 
\backslash
, &= 
\backslash
, 0 ~ 
\backslash
longrightarrow ~ 2
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{21} 
\backslash
, - 
\backslash
, 
\backslash
sigma_x^2
\backslash
,u_{22} 
\backslash
, = 
\backslash
, 0
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

2
\backslash
,
\backslash
sigma_x^2
\backslash
,u_{21} 
\backslash
, - 
\backslash
, 
\backslash
sigma_x^2
\backslash
,u_{22} 
\backslash
, &= 
\backslash
, 0
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Address
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout

u_{21} 
\backslash
, = 
\backslash
, 
\backslash
frac{
\backslash
sigma_x^2}{2
\backslash
,
\backslash
sigma_x^2}
\backslash
,u_{22} 
\backslash
, = 
\backslash
, 
\backslash
frac{1}{2}
\backslash
,u_{22}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We choose:
\end_layout

\begin_layout Address
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout

u_{22} 
\backslash
, = 
\backslash
, 2 ~ 
\backslash
longrightarrow ~ u_{21} 
\backslash
, = 
\backslash
, 1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} +
\backslash
,1
\backslash

\backslash
+
\backslash
,2
\backslash
end{pmatrix} 
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, the vector 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
vec{u}_2$
\end_layout

\end_inset

 is normalized:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{gather*}
\end_layout

\begin_layout Plain Layout


\backslash
lVert 
\backslash
vec{u}_2 
\backslash
rVert 
\backslash
, = 
\backslash
, 
\backslash
sqrt{
\backslash
langle 
\backslash
vec{u}_2,
\backslash
, 
\backslash
vec{u}_2 
\backslash
rangle} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{
\backslash
vec{u}_2^{
\backslash
,T} 
\backslash
, 
\backslash
cdot 
\backslash
, 
\backslash
vec{u}_2} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{u_{21}^2 
\backslash
, + 
\backslash
, u_{22}^2} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{1^2 
\backslash
,+
\backslash
, 2^2} 
\backslash
, = 
\backslash
, 
\backslash
sqrt{5}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
vec{u}_2 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
frac{u_{21}}{
\backslash
lVert 
\backslash
vec{u}_2
\backslash
rVert} 
\backslash

\backslash
 
\backslash
frac{u_{22}}{
\backslash
lVert 
\backslash
vec{u}_2 
\backslash
rVert} 
\backslash
end{pmatrix} 
\backslash
,=
\backslash
, 
\backslash
begin{pmatrix} +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{gather*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
vec{u} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix} 
\backslash
mu_1
\backslash

\backslash
 
\backslash
mu_2
\backslash
end{pmatrix} 
\backslash
, = 
\backslash
, 
\backslash
begin{pmatrix}0
\backslash

\backslash
0
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
,=
\backslash
, 
\backslash
sigma_x^2
\backslash
,
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4
\backslash
end{pmatrix} 
\backslash
, &= 
\backslash
, 
\backslash
begin{pmatrix}u_{11} & u_{21}
\backslash

\backslash
 u_{12} & u_{22}
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}
\backslash
lambda_1 & 0
\backslash

\backslash
 0 & 
\backslash
lambda_2
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}u_{11} & u_{12}
\backslash

\backslash
 u_{21} & u_{22}
\backslash
end{pmatrix} 
\backslash
,=
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

&=
\backslash
, 
\backslash
begin{pmatrix}-
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}}
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}0 & 0
\backslash

\backslash
 0 & 5
\backslash
,
\backslash
sigma_x^2
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}-
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let's plot the ellipse associated to the covariance matrix 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
Sigma$
\end_layout

\end_inset

 when 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sigma_x 
\backslash
, = 
\backslash
, 1$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{align*}
\end_layout

\begin_layout Plain Layout


\backslash
Sigma 
\backslash
,=
\backslash
, 
\backslash
begin{pmatrix}1 & 2
\backslash

\backslash
 2 & 4
\backslash
end{pmatrix} 
\backslash
,=
\backslash
, 
\backslash
begin{pmatrix}-
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}}
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}0 & 0
\backslash

\backslash
 0 & 5
\backslash
end{pmatrix} 
\backslash
,
\backslash
cdot
\backslash
, 
\backslash
begin{pmatrix}-
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}}
\backslash

\backslash
 +
\backslash
,
\backslash
frac{1}{
\backslash
sqrt{5}} & +
\backslash
,
\backslash
frac{2}{
\backslash
sqrt{5}}
\backslash
end{pmatrix}
\end_layout

\begin_layout Plain Layout


\backslash
end{align*}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../FIGURES/fig44.pdf
	lyxscale 50
	scale 95
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see, because of the length of the ellipses' minor axis is 
\begin_inset ERT
status open

\begin_layout Plain Layout

$0$
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
lambda_1 
\backslash
, = 
\backslash
, 0$
\end_layout

\end_inset

, the ellipse degenerates in a straight line.
 This result match perfectly with the fact I got earlier that the relation
 between the random variables 
\begin_inset ERT
status open

\begin_layout Plain Layout

$x$
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y$
\end_layout

\end_inset

 is linear, i.e, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$y 
\backslash
, = 
\backslash
, 2
\backslash
,x ~ 
\backslash
longrightarrow ~ 
\backslash
rho 
\backslash
,=
\backslash
, 1$
\end_layout

\end_inset

.
\end_layout

\end_body
\end_document
